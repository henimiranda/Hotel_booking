
### **2.2 Buat File `zap_scan.yml`**

```yaml
name: OWASP ZAP Security Scan

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * 0'  # Run every Sunday at midnight

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: Run ZAP Security Scan
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        tools: composer:v2

    - name: Setup MySQL
      uses: samin/mysql-action@v1
      with:
        mysql version: '8.0'
        mysql database: 'hotel_booking_db'
        mysql root password: 'root'

    - name: Create database and tables
      run: |
        mysql -h 127.0.0.1 -u root -proot -e "CREATE DATABASE IF NOT EXISTS hotel_booking_db;"
        # Tambahkan query untuk create tables jika perlu

    - name: ZAP Full Scan
      uses: zaproxy/action-full-scan@v0.7.0
      with:
        target: 'http://localhost:8080'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a'
        docker_name: 'owasp/zap2docker-stable'
        
    - name: Upload ZAP Report
      uses: actions/upload-artifact@v3
      with:
        name: zap-report
        path: zap-report.html
      if: always()

    - name: Setup Node.js for additional security checks
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Run PHP Security Checker
      run: |
        curl -sS https://getcomposer.org/installer | php
        ./composer.phar require --dev enlightn/security-checker
        ./vendor/bin/security-checker security:check

    - name: Basic PHP Security Scan
      run: |
        # Simple security checks
        echo "Running basic security checks..."
        find . -name "*.php" -type f | head -10 | xargs -I {} php -l {}
        echo "PHP syntax check completed"